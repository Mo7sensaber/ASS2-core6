// <auto-generated />
using System;
using ASS1.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASS1.Migrations
{
    [DbContext(typeof(Contexet))]
    [Migration("20240828112608_mapping1")]
    partial class mapping1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ASS1.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Top_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Top_Id")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("ASS1.Entities.CourseList", b =>
                {
                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<int>("inst_ID")
                        .HasColumnType("int");

                    b.Property<string>("evaluate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Course_ID", "inst_ID");

                    b.HasIndex("inst_ID");

                    b.ToTable("CoursesLists");
                });

            modelBuilder.Entity("ASS1.Entities.Department", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime?>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ins_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("Ins_ID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ASS1.Entities.Instructor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dept_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("HourRate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<int?>("bouns")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Dept_ID");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("ASS1.Entities.Stud_Course", b =>
                {
                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<int>("stud_ID")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Course_ID", "stud_ID");

                    b.HasIndex("stud_ID");

                    b.ToTable("Studs");
                });

            modelBuilder.Entity("ASS1.Entities.student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Dep_Id")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Dep_Id")
                        .IsUnique();

                    b.ToTable("students");
                });

            modelBuilder.Entity("ASS1.Entities.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("ASS1.Entities.Course", b =>
                {
                    b.HasOne("ASS1.Entities.Topic", "Topic")
                        .WithOne("Course")
                        .HasForeignKey("ASS1.Entities.Course", "Top_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("ASS1.Entities.CourseList", b =>
                {
                    b.HasOne("ASS1.Entities.Course", "Course")
                        .WithMany("Courses")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASS1.Entities.Instructor", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("inst_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("ASS1.Entities.Department", b =>
                {
                    b.HasOne("ASS1.Entities.Instructor", "instructor")
                        .WithMany()
                        .HasForeignKey("Ins_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("instructor");
                });

            modelBuilder.Entity("ASS1.Entities.Instructor", b =>
                {
                    b.HasOne("ASS1.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Dept_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ASS1.Entities.Stud_Course", b =>
                {
                    b.HasOne("ASS1.Entities.Course", "course")
                        .WithMany("Stud_Course")
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASS1.Entities.student", "Student")
                        .WithMany("studCourses")
                        .HasForeignKey("stud_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("course");
                });

            modelBuilder.Entity("ASS1.Entities.student", b =>
                {
                    b.HasOne("ASS1.Entities.Department", "departments")
                        .WithOne("student")
                        .HasForeignKey("ASS1.Entities.student", "Dep_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("departments");
                });

            modelBuilder.Entity("ASS1.Entities.Course", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Stud_Course");
                });

            modelBuilder.Entity("ASS1.Entities.Department", b =>
                {
                    b.Navigation("student")
                        .IsRequired();
                });

            modelBuilder.Entity("ASS1.Entities.Instructor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("ASS1.Entities.student", b =>
                {
                    b.Navigation("studCourses");
                });

            modelBuilder.Entity("ASS1.Entities.Topic", b =>
                {
                    b.Navigation("Course")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
